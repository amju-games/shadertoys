//------------------------------------------------------------------------
// Look around
// Jason Colman Feb 2016
//------------------------------------------------------------------------

#define PI 3.141592653589793

//------------------------------------------------------------------------
// camera matrix
mat3 getCameraMatrix( vec3 camFow )
{
    vec3 forward = normalize( camFow );
    vec3 up = normalize( vec3( 0.0, -1.0, 0.0 ) );
    vec3 right = normalize( cross( up, forward ) );

    mat3 mat = mat3( right, up, forward );

    return mat;
}

//------------------------------------------------------------------------
void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	vec2 uv = fragCoord.xy / iResolution.xy;
    
    vec2 mouse = iMouse.xy / iResolution.xy;
    float deltaRot = mouse.x * PI * 2.0;

    float D = 1.0;
    vec3 camPos = vec3( -D * cos(deltaRot), mouse.y * 4.0, -D * sin(deltaRot) );
    vec3 camFow = vec3( 1.0 * cos(deltaRot), 0.8, 1.0 * sin(deltaRot) );
    mat3 camMat = getCameraMatrix( camFow );

    float viewRatio = iResolution.y / iResolution.x;
    // Tweak so we don't see nasty join with floor and ceiling
    uv.y *= 0.5 * viewRatio + 0.1;
    uv.x -= 0.5;
    vec3 rayDir = camMat * normalize( vec3( uv, viewRatio * 0.6 ) );
    
    vec4 col = textureCube(iChannel0, rayDir);
	fragColor = vec4(col.xyz,1.0);
}
